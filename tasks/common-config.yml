---
- name: Configure global settings.
  ansible.builtin.lineinfile:
    dest: "{{ postgresql_config_path }}/postgresql.conf"
    regexp: "^#?{{ config.option }}.+$"
    line: "{{ config.option }} = '{{ config.value }}'"
    state: "{{ config.state | default('present') }}"
    mode: 0644
  loop: "{{ postgresql_global_config_options }}"
  loop_control:
    loop_var: config
  notify: restart postgresql

- name: Configure host based authentication.
  community.postgresql.postgresql_pg_hba:
    dest: "{{ postgresql_config_path }}/pg_hba.conf"
    address: "{{ entry.address | default(omit) }}"
    netmask: "{{ entry.netmask | default(omit) }}"
    contype: "{{ entry.contype | default(omit) }}"
    users: "{{ entry.users | default(omit) }}"
    source: "{{ entry.source | default(omit) }}"
    databases: "{{ entry.databases | default(omit) }}"
    method: "{{ entry.method | default(omit) }}"
#    options: "{{ entry.options | default(omit) }}"
#    comment: "{{ entry.comment | default(omit) }}"
    keep_comments_at_rules: true
  loop: "{{ postgresql_hba_entries }}"
  loop_control:
    loop_var: entry
  notify: restart postgresql
  when: postgresql_hba_entries | length > 0

- name: "Create user specified directories"
  ansible.builtin.file:
    path: "{{ dir.path }}"
    state: "{{ dir.state | default('directory') }}"
    owner: "{{ dir.owner | default('root') }}"
    group: "{{ dir.group | default(unbound_group) }}"
    mode: "{{ dir.mode | default('0750') }}"
  loop: "{{ postgresql_dirs }}"
  loop_control:
    loop_var: dir

- name: "Create user specified files"
  ansible.builtin.template:
    src: "{{ file.src }}"
    dest: "{{ file.dest }}"
    owner: "{{ file.owner | default('root') }}"
    group: "{{ file.group | default(unbound_group) }}"
    mode: "{{ file.mode | default('0640') }}"
  loop: "{{ postgresql_files }}"
  loop_control:
    loop_var: file
  notify:
    - restart postgresql
